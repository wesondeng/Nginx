user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
    ##
    server{
        listen 8080;
        resolver 8.8.8.8;
        resolver_timeout 30s; #解析超时30s
        location / {
            proxy_buffering on; #开启nginx缓存功能
            proxy_buffer_size 4k; ## 响应头缓存设置为 4k
            proxy_buffers 256 4k; # # 缓存区的大小设置为 256*4k
            proxy_busy_buffers_size 8k; # 向客户端发送数据的缓存区设置为 2*4k 即 8k
            proxy_max_temp_file_size 0k; # 设置不允许缓存到磁盘
            proxy_pass http://$host$request_uri;  #http的请求
            proxy_pass_request_headers on; #
            proxy_set_header Host $host; # 后端服务器识别是哪个主机访问。
            proxy_set_header X-Forwarded-For $remote_addr; #用于后端服务器中的服务程序记录真实的客户端 IP，而不是代理服务器的 IP
            proxy_connect_timeout 30s; #连接超时
            proxy_send_timeout 60s; #发送超时
            proxy_read_timeout 60s; #接收超时
        }
    }

    server{
    listen 8081;
    resolver 8.8.8.8;
    resolver_timeout 30s;
    location / {
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 256 4k;
        proxy_busy_buffers_size 8k;
        proxy_max_temp_file_size 0k;
        proxy_pass https://$host$request_uri; #https的请求
        proxy_pass_request_headers on;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}
}
